package com.etoilecarte;/** * Created by simo on 25/04/16. */import android.content.Context;import android.content.DialogInterface;import android.content.Intent;import android.graphics.Bitmap;import android.graphics.BitmapFactory;import android.os.Bundle;import android.os.StrictMode;import android.support.v7.app.AlertDialog;import android.support.v7.app.AppCompatActivity;import android.view.LayoutInflater;import android.view.Menu;import android.view.MenuItem;import android.view.View;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.BaseAdapter;import android.widget.EditText;import android.widget.GridView;import android.widget.ImageView;import android.widget.TextView;import com.tktm.lyvraison.beans.Category;import java.io.IOException;import java.io.InputStream;import java.net.URL;import java.util.ArrayList;import java.util.List;public class MainActivity extends AppCompatActivity implements View.OnClickListener {    ImageView imageLogo = null;    ImageView imageJour = null;    EditText password = null;    static String url;    View view = null;    static int idCatgerorie = -1;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();        StrictMode.setThreadPolicy(policy);        setContentView(R.layout.activity_main);        // Toolbar myToolbar = (Toolbar) findViewById(R.id.my_toolbar);        //setSupportActionBar(myToolbar);       imageLogo = (ImageView) findViewById(R.id.imageLogo);     //   imageJour.setOnClickListener(this);        imageLogo.setImageResource(R.drawable.logo);      //  imageJour.setImageResource(R.drawable.menudujour);        if (ConnectionServer.getInstance().IsReachable(this)){            GridView gridView = (GridView) findViewById(R.id.gridview);            gridView.setAdapter(new MyAdapter(this));            gridView.setOnItemClickListener(new AdapterView.OnItemClickListener() {                public void onItemClick(AdapterView<?> parent, View v, int position, long id) {                    Intent i = new Intent(MainActivity.this, ListFoods.class);                    MyAdapter.Item item = (MyAdapter.Item) parent.getItemAtPosition(position);                    int idCat = item.id;                    MainActivity.idCatgerorie = idCat;                    i.putExtra("idCat", idCat);                    startActivity(i);                }            });        }    }    @Override    public boolean onCreateOptionsMenu(Menu menu) {        getMenuInflater().inflate(R.menu.setting, menu);        return true;    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        switch (item.getItemId()) {            case R.id.action_setting:                view = LayoutInflater.from(MainActivity.this).inflate(R.layout.popup_alert, null);                password = (EditText) view.findViewById(R.id.password);                AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);                //  System.out.print(password.getText().toString());                builder.setMessage("Setting").setView(view).setPositiveButton("Login", new DialogInterface.OnClickListener() {                    @Override                    public void onClick(DialogInterface dialogInterface, int i) {                        String a = password.getText().toString();                        if (a.equals("passwordx")) {                            Intent p = new Intent(MainActivity.this, Setting.class);                            startActivity(p);                        }                    }                }).setNegativeButton("cancel", null);                AlertDialog alert = builder.create();                alert.show();                return true;        }        return super.onOptionsItemSelected(item);    }    @Override    public void onClick(View view) {        if (view == imageJour) {            Intent i = new Intent(MainActivity.this, MenuJourActivity.class);            //i.putExtra("idpizza", pizza);            System.out.println("simo");            startActivity(i);        }    }    private class MyAdapter extends BaseAdapter {        private List<Item> items = new ArrayList<Item>();        private LayoutInflater inflater;        public MyAdapter(Context context) {            //String address = context.getResources().getString(R.string.adressConnect);            WebService webService = new WebService(context);            View view0 = LayoutInflater.from(MainActivity.this).inflate(R.layout.setting, null);            EditText adressText = (EditText) view0.findViewById(R.id.adress);            url = adressText.getText().toString();            // Asynck Task            ArrayList<Category> listCategorie = webService.listProduit(url);            inflater = LayoutInflater.from(context);            for (Category cat : listCategorie) {                try {                    Bitmap bitmap = BitmapFactory.decodeStream((InputStream) new URL(url + cat.getDescription().getImagePath()).getContent());                    items.add(new Item(cat.getName(), bitmap, cat.getId()));                } catch (IOException e) {                    e.printStackTrace();                }            }        }        @Override        public int getCount() {            return items.size();        }        @Override        public Object getItem(int i) {            return items.get(i);        }        @Override        public long getItemId(int i) {            return 2;        }        @Override        public View getView(int i, View view, ViewGroup viewGroup) {            View v = view;            ImageView picture;            TextView name;            if (v == null) {                v = inflater.inflate(R.layout.gridview_item, viewGroup, false);                v.setTag(R.id.picture, v.findViewById(R.id.picture));                v.setTag(R.id.text, v.findViewById(R.id.text));            }            picture = (ImageView) v.getTag(R.id.picture);            name = (TextView) v.getTag(R.id.text);            Item item = (Item) getItem(i);            picture.setImageBitmap(item.url);            name.setText(item.name);            return v;        }        private class Item {            final String name;            final Bitmap url;            final int id;            Item(String name, Bitmap url, int id) {                this.name = name;                this.id = id;                this.url = url;            }        }    }}